*&---------------------------------------------------------------------*
*& Report ZSDR_BILLING
*& Functional : Irwan R- --------------------------------------------------------------------*
*& Abaper : Irwan R ---------------------------------------------------------------------*
*& Requested By : Noni / Eka Finance DPM---------------------------------------------------------------------*
*& Date : 14/09/2022 ---------------------------------------------------------------------*
*&---------------------------------------------------------------------*

*&---------------------------------------------------------------------*

INCLUDE zsdr_billing_top.
INCLUDE zsdr_billing_f01.
INCLUDE zsdr_billing_f02. "Accounting Data Processing


AT SELECTION-SCREEN OUTPUT.
  PERFORM f_initial_screen.
  IF rb_bill EQ 'X'.
    REFRESH s_saknr.
    REFRESH s_belnr.
    REFRESH s_budat.
  ELSE.
    REFRESH s_vtweg.
    REFRESH s_vbeln.
    REFRESH s_spart.
    REFRESH s_sfakn.
    REFRESH s_kunag.
    REFRESH s_bstnk.
    REFRESH s_kunrg.
    REFRESH s_matnr.
    REFRESH s_fkdat.
    REFRESH s_fbuda.
    REFRESH s_bldat.
    REFRESH s_vgbel.
    REFRESH s_fkart.
    REFRESH s_aubel.
    REFRESH s_rfbsk.
  ENDIF.




START-OF-SELECTION.
  IF rb_bill EQ 'X'.
    PERFORM f_getdata.
  ELSE.
    PERFORM f_getdata2. "Accounting doc
  ENDIF.
  PERFORM f_data_processing.
  IF it_data[] IS NOT INITIAL.
    PERFORM f_head.
    PERFORM f_display.
  ELSE.
    MESSAGE 'Data Tidak Ditemukan....' TYPE 'I' .
  ENDIF.
  
  
  
  =======================INCLUDE=============================
  
  *&---------------------------------------------------------------------*
*&  Include           ZSDR_BILLING_TOP
*&---------------------------------------------------------------------*
*& Report ZSDR_BILLING
*& Functional : Irwan R- --------------------------------------------------------------------*
*& Abaper : Irwan R ---------------------------------------------------------------------*
*& Requested By : Noni / Eka Finance DPM---------------------------------------------------------------------*
*& Date : 14/09/2022 ---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
REPORT  zsdr_billing.
TYPE-POOLS : slis, icon.

TABLES : vbrk,vbrp,likp,lips,vbak,vbap,kna1,
         zfitx_fpdetail,zsogdo,bseg,bkpf,mkpf.

DATA : gw_layout     TYPE slis_layout_alv,
       gt_cat        TYPE slis_t_fieldcat_alv,
       gw_cat        TYPE slis_fieldcat_alv,
       gt_event      TYPE slis_t_event,
       gw_event      TYPE slis_alv_event,
       gt_sort       TYPE slis_t_sortinfo_alv,
       gw_sort       TYPE slis_sortinfo_alv,
       g_repid       TYPE sy-repid,
       it_listheader TYPE slis_t_listheader,
       wa_listheader TYPE slis_listheader.


TYPES : BEGIN OF ty_data.
    INCLUDE STRUCTURE vbrk.
TYPES :posnr     TYPE vbrp-posnr,
       prsdt     TYPE vbrp-prsdt,
       pstyv     TYPE vbrp-pstyv,
       mwsbp     TYPE vbrp-mwsbp,
       fkimg     TYPE vbrp-fkimg,
       fbuda     TYPE vbrp-fbuda,
       aubel     TYPE vbrp-aubel,
       prodh     TYPE vbrp-prodh,
       cmpre     TYPE vbrp-cmpre,
       vrkme     TYPE vbrp-vrkme,
       matnr     TYPE vbrp-matnr,
       vgbel     TYPE vbrp-vgbel,
       vgpos     TYPE vbrp-vgpos,
       aupos     TYPE vbrp-aupos,
       wavwr     TYPE vbrp-wavwr,
       arktx     TYPE vbrp-arktx,
       vstel     TYPE likp-vstel,
       lifex     TYPE likp-lifex,
       podat     TYPE likp-podat,
       lfart     TYPE likp-lfart,
       bldat     TYPE likp-bldat,
       kunnr     TYPE likp-kunnr,
       xabln     TYPE likp-xabln,
       wadat_ist TYPE likp-wadat_ist,
       bwart     TYPE lips-bwart,
       kdmat     TYPE lips-kdmat,
       werks     TYPE lips-werks,
       lgort     TYPE lips-lgort,
       zfbdt     TYPE bseg-zfbdt,
       buzei     TYPE bseg-buzei,
       saknr     TYPE bseg-saknr,
       fpnum     TYPE zfitx_fpdetail-fpnum,
       cgrn      TYPE zsogdo-cgrn,
       bstnk     TYPE vbak-bstnk,
       name1     TYPE kna1-name1,
       name2     TYPE kna1-name1,
       qty_bill  TYPE p LENGTH 16 DECIMALS 0,
       total     TYPE p LENGTH 16 DECIMALS 2,
       billcncl  TYPE c LENGTH 1, "flag billing cancel type
       net       TYPE vbrp-netwr,
       mtart     TYPE lips-mtart, "Material Type
       bill_ori  TYPE vbrk-sfakn,
       price     TYPE vbrp-cmpre,
       augbl     TYPE bsad-augbl, "clearing Doc
       augdt     TYPE bsad-augdt, "Clearing Date
       ldpod     TYPE i,
       ldinv     TYPE i,
       ldsubinv  TYPE i,
       period1   TYPE c LENGTH 2, "period based on billing date
       period2   TYPE c LENGTH 2, "period based on translation date
       diff_per  TYPE c LENGTH 1, "flag for different period
       dmbtr     TYPE vbrp-netwr, "Local amount
       pswbt     TYPE bseg-pswbt. "amount in G/L

TYPES : END OF ty_data.


DATA : it_data   TYPE TABLE OF ty_data WITH HEADER LINE,
       wa_data   TYPE TABLE OF ty_data,
       it_likp   TYPE TABLE OF likp WITH HEADER LINE,
       wa_likp   TYPE likp,
       it_lips   TYPE TABLE OF lips WITH HEADER LINE,
       wa_lips   TYPE  lips,
       it_bseg   TYPE TABLE OF bseg WITH HEADER LINE,
       wa_bseg   TYPE  bseg,
       it_vbak   TYPE TABLE OF vbak WITH HEADER LINE,
       wa_vbak   TYPE vbak,
       it_bkpf   TYPE TABLE OF bkpf WITH HEADER LINE,
       wa_bkpf   TYPE bkpf,
       it_bsid   TYPE TABLE OF bsid WITH HEADER LINE,
       wa_bsid   TYPE bsid,
       it_zfitx  TYPE TABLE OF zfitx_fpdetail WITH HEADER LINE,
       wa_zfitx  TYPE zfitx_fpdetail,
       it_zsogdo TYPE TABLE OF zsogdo WITH HEADER LINE,
       wa_zsogdo TYPE zsogdo,
       it_kna1   TYPE TABLE OF kna1 WITH HEADER LINE,
       wa_kna1   TYPE kna1,
       it_bsad   TYPE TABLE OF bsad WITH HEADER LINE,
       wa_bsad   TYPE bsad,
       it_data2  TYPE TABLE OF ty_data WITH HEADER LINE,
       wa_data2  TYPE TABLE OF ty_data,
       it_bseg2  TYPE TABLE OF bseg WITH HEADER LINE,
       wa_bseg2  TYPE bseg.

DATA : sumbill TYPE vbrk-netwr,
       bill    TYPE c LENGTH 100.

SELECTION-SCREEN BEGIN OF BLOCK c WITH FRAME TITLE TEXT-002.
PARAMETERS : rb_bill RADIOBUTTON GROUP rb1 DEFAULT 'X' USER-COMMAND uc1,
             rb_acc  RADIOBUTTON GROUP rb1.
SELECTION-SCREEN END OF BLOCK c.

SELECTION-SCREEN BEGIN OF BLOCK a WITH FRAME TITLE TEXT-001.
SELECT-OPTIONS :
s_vkorg FOR vbrk-vkorg NO INTERVALS NO-EXTENSION OBLIGATORY,
s_gjahr FOR vbrk-gjahr NO INTERVALS NO-EXTENSION OBLIGATORY,
s_vtweg FOR vbrk-vtweg MODIF ID 01,
s_saknr FOR bseg-saknr MODIF ID 02,
s_spart FOR vbrk-spart MODIF ID 01,
s_kunag FOR vbrk-kunag MODIF ID 01,
s_kunrg FOR vbrk-kunrg MODIF ID 01,
s_fkdat FOR vbrk-fkdat MODIF ID 01,
s_bldat FOR likp-bldat MODIF ID 01,
s_fkart FOR vbrk-fkart MODIF ID 01,
s_vbeln FOR vbrk-vbeln MODIF ID 01,
s_sfakn FOR vbrk-sfakn MODIF ID 01,
*s_fksto FOR vbrk-fksto,
s_bstnk FOR vbak-bstnk MODIF ID 01,
s_matnr FOR vbrp-matnr MODIF ID 01,
s_fbuda FOR vbrp-fbuda MODIF ID 01,
s_vgbel FOR vbrp-vgbel MODIF ID 01,
s_aubel FOR vbrp-aubel MODIF ID 01,
s_belnr FOR bseg-belnr MODIF ID 02,
s_budat FOR bkpf-budat MODIF ID 02,
s_rfbsk FOR vbrk-rfbsk MODIF ID 01.


SELECTION-SCREEN END OF BLOCK a.

SELECTION-SCREEN BEGIN OF BLOCK b WITH FRAME TITLE TEXT-003.
PARAMETERS:
 c_cek1    AS CHECKBOX DEFAULT ' ' MODIF ID 01. "Billing cancelation only.

SELECTION-SCREEN END   OF BLOCK b.


==============================INCLUDE 2 ==================================
*&---------------------------------------------------------------------*
*&  Include           ZSDR_BILLING_F01
*&---------------------------------------------------------------------*
*&---------------------------------------------------------------------*
*& Report ZSDR_BILLING
*& Functional : Irwan R- --------------------------------------------------------------------*
*& Abaper : Irwan R ---------------------------------------------------------------------*
*& Requested By : Noni / Eka Finance DPM---------------------------------------------------------------------*
*& Date : 14/09/2022 ---------------------------------------------------------------------*
*&---------------------------------------------------------------------*

FORM f_getdata.

  IF c_cek1 NE 'X'.

    SELECT a~vbeln, a~fkart, a~waerk, a~vkorg, a~vtweg, a~knumv, a~fkdat, a~gjahr, a~rfbsk, a~zterm, a~ernam,
           a~erzet, a~erdat, a~kunrg, a~kunag, a~bstnk_vf, a~mwsbk, a~fksto, a~spart,a~sfakn,a~kurrf_dat,
           b~posnr, b~fkimg, b~vrkme, b~prsdt, b~fbuda, b~netwr, b~vgbel, b~vgpos, b~aubel, b~aupos,
           b~pstyv, b~prodh, b~wavwr, b~mwsbp, b~cmpre, b~arktx,b~matnr
    FROM vbrk AS a INNER JOIN vbrp AS b ON a~vbeln = b~vbeln
    INTO CORRESPONDING FIELDS OF TABLE @it_data
    WHERE  a~vkorg IN @s_vkorg
    AND a~vtweg IN @s_vtweg
    AND a~spart IN @s_spart
    AND a~kunag IN @s_kunag
    AND a~kunrg IN @s_kunrg
    AND a~fkdat IN @s_fkdat
    AND a~fkart IN @s_fkart
    AND a~vbeln IN @s_vbeln
    AND a~fksto NE 'X'
    AND b~matnr IN @s_matnr
    AND b~fbuda IN @s_fbuda
*  AND f~bstnk IN @s_bstnk
    AND b~vgbel IN @s_vgbel
    AND b~aubel IN @s_aubel
    AND a~sfakn IN @s_sfakn
    AND a~rfbsk IN @s_rfbsk.
*  AND e~saknr IN @s_saknr.

    SORT it_data ASCENDING BY kurrf_dat fkart.
    DELETE it_data WHERE kurrf_dat BETWEEN s_fkdat-low AND s_fkdat-high  AND fkart EQ 'Z909' .

  ELSE.

    SELECT a~vbeln, a~fkart, a~waerk, a~vkorg, a~vtweg, a~knumv, a~fkdat, a~gjahr, a~rfbsk, a~zterm, a~ernam,
          a~erzet, a~erdat, a~kunrg, a~kunag, a~bstnk_vf, a~mwsbk, a~fksto, a~spart,a~sfakn,
          b~posnr, b~fkimg, b~vrkme, b~prsdt, b~fbuda, b~netwr, b~vgbel, b~vgpos, b~aubel, b~aupos,
          b~pstyv, b~prodh, b~wavwr, b~mwsbp, b~cmpre, b~arktx,b~matnr
   FROM vbrk AS a INNER JOIN vbrp AS b ON a~vbeln = b~vbeln
   INTO CORRESPONDING FIELDS OF TABLE @it_data
   WHERE   a~vkorg IN @s_vkorg
   AND a~vtweg IN @s_vtweg
   AND a~spart IN @s_spart
   AND a~kunag IN @s_kunag
   AND a~kunrg IN @s_kunrg
   AND a~fkdat IN @s_fkdat
   AND ( a~fkart EQ 'Z909' OR a~fkart EQ 'Z910' OR a~fkart EQ 'Z911' OR a~fkart EQ 'Z916' OR a~fkart EQ 'Z918' ) "a~fkart in @s_fkart
   AND a~vbeln IN @s_vbeln
   AND a~fksto NE 'X'
   AND b~matnr IN @s_matnr
   AND b~fbuda IN @s_fbuda
*  AND f~bstnk IN @s_bstnk
   AND b~vgbel IN @s_vgbel
   AND b~aubel IN @s_aubel
   AND a~sfakn IN @s_sfakn
    AND a~rfbsk IN @s_rfbsk.
*  AND e~saknr IN @s_saknr.




  ENDIF.

  IF it_data[] IS NOT INITIAL.

    SELECT vbeln, vstel, lfart, xabln, lifex, bldat, wadat_ist, podat, kunnr
      INTO CORRESPONDING FIELDS OF TABLE @it_likp
      FROM likp
      FOR ALL ENTRIES IN @it_data
      WHERE vbeln = @it_data-vgbel.
    SORT it_likp ASCENDING BY vbeln.

    SELECT vbeln,posnr, bwart, werks, lgort, kdmat, mtart
      INTO CORRESPONDING FIELDS OF TABLE @it_lips
      FROM lips
      FOR ALL ENTRIES IN @it_data
      WHERE vbeln = @it_data-vgbel AND posnr = @it_data-vgpos.
    SORT it_lips ASCENDING BY vbeln posnr.


    "getting accounting doc from indexed table (not cleared)
    SELECT * FROM bsid
      INTO TABLE @it_bsid
      FOR ALL ENTRIES IN @it_data
      WHERE bukrs = @it_data-vkorg
      AND kunnr = @it_data-kunag
      AND gjahr IN @s_gjahr
      AND budat = @it_data-fkdat.
    "AND blart = 'RV' OR blart = 'AB'.

    "Getting accounting doc from indexed table (cleared doc)
    SELECT * FROM bsad
    INTO TABLE @it_bsad
    FOR ALL ENTRIES IN @it_data
    WHERE bukrs = @it_data-vkorg
    AND kunnr = @it_data-kunag
    AND gjahr IN @s_gjahr
    AND budat = @it_data-fkdat.
    "AND blart = 'RV' OR blart = 'AB'.

    APPEND LINES OF it_bsad TO it_bsid.

    IF it_bsid[] IS NOT INITIAL.
      SELECT vbeln, belnr, zuonr, saknr,zfbdt,buzei,gjahr,augbl,augdt,hkont,matnr,werks,menge,dmbtr,wrbtr,pswbt
      INTO CORRESPONDING FIELDS OF TABLE @it_bseg
        FROM bseg
        FOR ALL ENTRIES IN @it_bsid
        WHERE belnr = @it_bsid-belnr
        AND bukrs = @it_bsid-bukrs
        AND gjahr = @it_bsid-gjahr
        "AND buzei NE '001'
        AND hkont IN @s_saknr.
      IF it_bseg[] IS INITIAL AND s_saknr NE  ''.
        REFRESH it_data[].
      ENDIF.
    ENDIF.
    SORT it_bseg ASCENDING BY vbeln buzei.
    APPEND LINES OF it_bseg TO it_bseg2.
    SORT it_bseg2 ASCENDING BY belnr.

    SELECT vbeln, bstnk
      INTO CORRESPONDING FIELDS OF TABLE @it_vbak
      FROM vbak
      FOR ALL ENTRIES IN @it_data
      WHERE vbeln = @it_data-aubel AND bstnk IN @s_bstnk.
    IF it_vbak[] IS INITIAL AND s_bstnk NE ''.
      REFRESH it_data[].
    ENDIF.
    SORT it_vbak ASCENDING BY vbeln.

    SELECT vbeln, fpnum
      INTO CORRESPONDING FIELDS OF TABLE @it_zfitx
      FROM zfitx_fpdetail
      FOR ALL ENTRIES IN @it_data
      WHERE  vbeln = @it_data-vbeln.

    SELECT vbeln, cgrn
    INTO CORRESPONDING FIELDS OF  TABLE @it_zsogdo
      FROM zsogdo
      FOR ALL ENTRIES IN @it_data
       WHERE vbeln = @it_data-vgbel.

    SELECT kunnr, name1
      INTO CORRESPONDING FIELDS OF TABLE @it_kna1
      FROM kna1
      FOR ALL ENTRIES IN @it_data
       WHERE kunnr = @it_data-kunag.



  ENDIF.

ENDFORM.

FORM f_data_processing.

  LOOP AT it_data.

    it_data-gjahr = it_data-fkdat(4).
    READ TABLE it_likp INTO wa_likp WITH KEY vbeln = it_data-vgbel BINARY SEARCH.
    IF sy-subrc EQ 0.
      it_data-vstel = wa_likp-vstel.
      it_data-lfart = wa_likp-lfart.
      it_data-xabln = wa_likp-xabln.
      it_data-lifex = wa_likp-lifex.
      it_data-bldat = wa_likp-bldat.
      it_data-wadat_ist = wa_likp-wadat_ist.
      it_data-podat = wa_likp-podat.
      it_data-kunnr = wa_likp-kunnr.

    ENDIF.


*         e~belnr, e~zuonr, e~saknr, e~zfbdt, e~buzei,
*         f~bstnk

    READ TABLE it_lips INTO wa_lips WITH KEY vbeln = it_data-vgbel posnr = it_data-vgpos BINARY SEARCH.
    IF sy-subrc EQ 0.
      it_data-bwart = wa_lips-bwart.
      it_data-werks = wa_lips-werks.
      it_data-lgort = wa_lips-lgort.
      it_data-kdmat = wa_lips-kdmat.
      it_data-mtart = wa_lips-mtart. "material type
    ENDIF.

    READ TABLE it_bseg INTO wa_bseg WITH KEY vbeln = it_data-vbeln buzei = '001' BINARY SEARCH.
    IF sy-subrc EQ 0.
      it_data-zuonr = wa_bseg-zuonr.
      it_data-belnr = wa_bseg-belnr.
      it_data-augbl = wa_bseg-augbl.
      it_data-augdt = wa_bseg-augdt.
      it_data-zfbdt = wa_bseg-zfbdt.
*  it_data-gjahr = wa_bseg-gjahr.
    ENDIF.

    READ TABLE it_bseg2 INTO wa_bseg2 WITH KEY belnr = it_data-belnr matnr = it_data-matnr menge = it_data-fkimg.
    IF sy-subrc EQ 0.
*      it_data-belnr = wa_bseg-belnr.
*      it_data-zuonr = wa_bseg-zuonr.
      it_data-saknr = wa_bseg2-hkont.
      it_data-buzei = wa_bseg2-buzei.
      it_data-dmbtr = wa_bseg2-dmbtr * 100.
      it_data-pswbt = wa_bseg2-pswbt.
*  it_data-gjahr = wa_bseg-gjahr.
    ENDIF.

    READ TABLE it_vbak INTO wa_vbak WITH KEY vbeln = it_data-aubel BINARY SEARCH.
    IF sy-subrc EQ 0.
      it_data-bstnk = wa_vbak-bstnk.
    ENDIF.

    READ TABLE it_zfitx INTO wa_zfitx WITH KEY vbeln = it_data-vbeln.
    IF sy-subrc EQ 0.
      it_data-fpnum = wa_zfitx-fpnum.
    ENDIF.

    READ TABLE it_zsogdo INTO wa_zsogdo WITH KEY vbeln = it_data-vgbel.
    IF sy-subrc EQ 0.
      it_data-cgrn = wa_zsogdo-cgrn.
    ENDIF.

    READ TABLE it_kna1 INTO wa_kna1 WITH KEY kunnr = it_data-kunag.
    IF sy-subrc EQ 0.
      it_data-name1 = wa_kna1-name1.
    ENDIF.

    it_data-net  = it_data-netwr.

    IF it_data-waerk EQ 'IDR'.
      it_data-net  = it_data-netwr * 100.
      it_data-wavwr = it_data-wavwr * 100.
      it_data-mwsbp = it_data-mwsbp * 100.
    ELSEIF it_data-waerk EQ 'USD'.
      it_data-net  = it_data-netwr / 100.
      it_data-wavwr = it_data-wavwr / 100.
      it_data-mwsbp = it_data-mwsbp / 100.
    ENDIF.
    it_data-qty_bill = it_data-fkimg.

    it_data-price = it_data-net / it_data-qty_bill.


    "giving value minus for credit and return billing
    IF ( it_data-fkart EQ 'Z905' OR it_data-fkart EQ 'Z904' ).
      it_data-net  = it_data-net * -1.
      it_data-mwsbp = it_data-mwsbp * -1.
      it_data-dmbtr = it_data-dmbtr * -1.
      "it_data-netwr = it_data-netwr * -1.
    ENDIF.

    SHIFT it_data-kunag BY 4 PLACES.
    SHIFT it_data-kunnr BY 4 PLACES.

    "giving flag for billing type cancel
    IF ( it_data-fkart EQ 'Z910' OR it_data-fkart EQ 'Z911' OR it_data-fkart EQ 'Z916' OR it_data-fkart EQ 'Z918' ).
      it_data-billcncl = 'X'.
    ENDIF.

    IF it_data-fkart EQ 'Z909'.
      it_data-net = it_data-net * -1.
      it_data-period1 = it_data-fkdat+4(2). "Period billing date
      it_data-period2 = it_data-kurrf_dat+4(2). "period translation date
      it_data-mwsbp = it_data-mwsbp * -1.
      it_data-dmbtr = it_data-dmbtr * -1.
    ENDIF.

    IF it_data-period1 NE it_data-period2.
      it_data-diff_per = 'X'.
    ENDIF.

    "lead time calculation

    it_data-ldpod     = it_data-podat - it_data-bldat.
    it_data-ldinv     = it_data-erdat - it_data-podat.
    it_data-ldsubinv  = it_data-zfbdt - it_data-erdat.

    "Local Amount.
    IF it_data-waerk EQ 'IDR'.
      it_data-dmbtr = it_data-net.
    ENDIF.

    it_data-total = it_data-net + it_data-mwsbp.

    sumbill = sumbill + it_data-dmbtr.
    MODIFY it_data.
  ENDLOOP.


  "delete billing type cancel
  IF c_cek1 NE 'X'.
    DELETE it_data WHERE billcncl EQ 'X'.
  ENDIF.

  DELETE it_data WHERE fkart EQ 'Z909' AND diff_per NE 'X'.
  DELETE it_data WHERE gjahr NOT IN s_gjahr.
  DELETE it_data WHERE bstnk NOT IN s_bstnk.
  DELETE it_data WHERE saknr NOT IN s_saknr.
  DELETE it_data WHERE belnr NOT IN s_belnr.

ENDFORM.




FORM f_head.
  DATA : info TYPE c LENGTH 100.
  wa_listheader-typ  = 'H'.
  wa_listheader-info ='REPORT BILLING'.
  APPEND wa_listheader TO it_listheader.
  CLEAR wa_listheader.

  wa_listheader-typ = 'S'.
  wa_listheader-key = 'Reporting Date:' .
  CONCATENATE  sy-datum+6(2)
               sy-datum+4(2)
               sy-datum(4)
               INTO wa_listheader-info
               SEPARATED BY '.'.
  APPEND wa_listheader TO it_listheader.
  CLEAR wa_listheader.

  wa_listheader-typ = 'A'.
  IF s_vkorg-low EQ '1100'.
    "CONCATENATE 'Sales for PT.Dharma Polimetal Tbk is ' bill into info SEPARATED BY space.
    wa_listheader-info = 'PT Dharma Polimetal Tbk'.
  ELSEIF s_vkorg-low EQ '1200'.
    wa_listheader-info ='PT Dharma Poliplast'.
  ELSEIF s_vkorg-low EQ '1300'.
    wa_listheader-info ='PT Dharma Precision Parts'.
  ELSEIF s_vkorg-low EQ '1600'.
    wa_listheader-info ='PT Dharma Controlcable Indonesia'.
  ELSEIF s_vkorg-low EQ '1500'.
    wa_listheader-info ='PT Dharma Electrindo Manufacturing'.
  ENDIF.
  "wa_listheader-info ='Subtittle ada disini'.
  APPEND wa_listheader TO it_listheader.
  CLEAR wa_listheader.



ENDFORM.



FORM f_display.

  DATA : it_event_exit TYPE slis_t_event_exit,
         wa_event_exit TYPE slis_event_exit.

  PERFORM f_fill_fieldcat.
  gw_layout-zebra = 'X'.
  gw_layout-info_fieldname = 'LINE_COLOR'.
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
    EXPORTING
      i_callback_program     = sy-repid
      i_callback_top_of_page = 'F_TOP_OF_PAGE'
*     I_GRID_TITLE           = 'IRWAN'
*     I_CALLBACK_USER_COMMAND  = 'HANDLE_USER_COMMAND'
*     i_callback_user_command  = 'USER_COMMAND'
*     i_callback_pf_status_set = 'PF'
      it_event_exit          = it_event_exit
      is_layout              = gw_layout
      it_fieldcat            = gt_cat
      i_default              = ''
      i_save                 = 'X'
    TABLES
      t_outtab               = it_data "Main Table
    EXCEPTIONS
      program_error          = 1
      OTHERS                 = 2.
  IF sy-subrc <> 0.
  ENDIF.




ENDFORM.




FORM f_top_of_page.

  CALL FUNCTION 'REUSE_ALV_COMMENTARY_WRITE'
    EXPORTING
      it_list_commentary = it_listheader.


ENDFORM.


FORM f_fill_fieldcat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'VKORG'.
  gw_cat-tabname = 'IT_DATA'.
*  gw_cat-checkbox = 'X'.
*  gw_cat-edit = 'X'.
  gw_cat-outputlen = 10.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Sales Org.'.
  APPEND gw_cat TO gt_cat.


  CLEAR: gw_cat.
  gw_cat-fieldname = 'WERKS'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 10.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Plant'.
  APPEND gw_cat TO gt_cat.


  CLEAR: gw_cat.
  gw_cat-fieldname = 'FKDAT'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 10.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Bill.Date'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'KURRF_DAT'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 10.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Trans.Date'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'FBUDA'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 15.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Srv Rend.Date'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'RFBSK'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 10.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Post. Acc'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'FKART'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 10.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Bill. Type'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'SPART'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 7.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Division'.
  APPEND gw_cat TO gt_cat.


  CLEAR: gw_cat.
  gw_cat-fieldname = 'VBELN'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 10.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Bill. No'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'SFAKN'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 10.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Cncld Bill'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'POSNR'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 10.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Bill. Item'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'MATNR'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 30.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Material'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'MTART'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 7.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Mat.Type'.
  APPEND gw_cat TO gt_cat.


  CLEAR: gw_cat.
  gw_cat-fieldname = 'ARKTX'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 30.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Desc. Material'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'KDMAT'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 30.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Cust. Material'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'QTY_BILL'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 10.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Bill. Qty'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'PRICE'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 15.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Price/Item'.
  APPEND gw_cat TO gt_cat.

*  CLEAR: gw_cat.
*  gw_cat-fieldname = 'NETWR'.
*  gw_cat-tabname = 'IT_DATA'.
*  gw_cat-outputlen = 16.
*  gw_cat-seltext_l = gw_cat-seltext_m = 'Net Value'.
*  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'NET'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 16.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Net '.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'WAERK'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 5.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Curr.'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'DMBTR'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 16.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Loc. Amount'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'MWSBP'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 16.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Tax'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'WAVWR'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 16.
  gw_cat-seltext_l = gw_cat-seltext_m = 'COST'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'TOTAL'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 16.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Net+Tax'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'ZFBDT'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 15.
  gw_cat-seltext_l = gw_cat-seltext_m = 'BS.Line Date'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'BELNR'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 10.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Acct Doc'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'AUGBL'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 10.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Clearing Doc'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'AUGDT'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 10.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Clearing Date'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'SAKNR'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 10.
  gw_cat-seltext_l = gw_cat-seltext_m = 'G/L Acc'.
  APPEND gw_cat TO gt_cat.


  CLEAR: gw_cat.
  gw_cat-fieldname = 'BLDAT'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 10.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Doc. Date'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'WADAT_IST'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 10.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Act GI Date'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'VGBEL'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 10.
  gw_cat-seltext_l = gw_cat-seltext_m = 'DO No'.
  APPEND gw_cat TO gt_cat.


  CLEAR: gw_cat.
  gw_cat-fieldname = 'LIFEX'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 20.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Ext. Dlv'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'XABLN'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 10.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Slip DO'.
  APPEND gw_cat TO gt_cat.


  CLEAR: gw_cat.
  gw_cat-fieldname = 'VGPOS'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 10.
  gw_cat-seltext_l = gw_cat-seltext_m = 'DO Item'.
  APPEND gw_cat TO gt_cat.


  CLEAR: gw_cat.
  gw_cat-fieldname = 'PODAT'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 10.
  gw_cat-seltext_l = gw_cat-seltext_m = 'POD Date'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'AUBEL'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 10.
  gw_cat-seltext_l = gw_cat-seltext_m = 'SO No'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'AUPOS'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 10.
  gw_cat-seltext_l = gw_cat-seltext_m = 'SO Item'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'BSTNK'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 25.
  gw_cat-seltext_l = gw_cat-seltext_m = 'PO No'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'KUNAG'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 6.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Sold To'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'NAME1'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 25.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Sold To Name'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'KUNNR'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 6.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Ship To'.
  APPEND gw_cat TO gt_cat.

*  CLEAR: gw_cat.
*  gw_cat-fieldname = 'NAME2'.
*  gw_cat-tabname = 'IT_DATA'.
*  gw_cat-outputlen = 25.
*  gw_cat-seltext_l = gw_cat-seltext_m = 'Ship To Name'.
*  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'FPNUM'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 20.
  gw_cat-seltext_l = gw_cat-seltext_m = 'FP No'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'CGRN'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 15.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Reg. DO'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'PRODH'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 10.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Prod. Hierarki'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'LDPOD'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 5.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Ld.Time POD'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'LDINV'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 5.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Ld.Time Bill.'.
  APPEND gw_cat TO gt_cat.

  CLEAR: gw_cat.
  gw_cat-fieldname = 'LDSUBINV'.
  gw_cat-tabname = 'IT_DATA'.
  gw_cat-outputlen = 5.
  gw_cat-seltext_l = gw_cat-seltext_m = 'Ld.Sub Inv.'.
  APPEND gw_cat TO gt_cat.



ENDFORM.



FORM f_initial_screen.
  LOOP AT SCREEN.
    IF rb_bill EQ 'X'.
      IF screen-group1 EQ '01'.
        screen-active = '1'.
      ELSEIF screen-group1 EQ '02'.
        screen-active = '0'.
      ENDIF.
    ELSEIF rb_acc EQ 'X'.
      IF screen-group1 EQ '02'.
        screen-active = '1'.
      ELSEIF screen-group1 EQ '01'.
        screen-active = '0'.
      ENDIF.
    ENDIF.
    MODIFY SCREEN.
  ENDLOOP.


ENDFORM.


=========================================INCLUDE 3============================
*&---------------------------------------------------------------------*
*&  Include           ZSDR_BILLING_F02
*&---------------------------------------------------------------------*



FORM f_getdata2.

  "getting accounting doc from indexed table (not cleared)
  SELECT * FROM bsid
    INTO TABLE @it_bsid
    " FOR ALL ENTRIES IN @it_data
    WHERE bukrs IN @s_vkorg
    AND kunnr IN @s_kunag
    AND gjahr IN @s_gjahr
    AND budat IN @s_budat
    AND blart = 'RV'.

  "Getting accounting doc from indexed table (cleared doc)
  SELECT * FROM bsad
   INTO TABLE @it_bsad
   " FOR ALL ENTRIES IN @it_data
   WHERE bukrs IN @s_vkorg
   AND kunnr IN @s_kunag
   AND gjahr IN @s_gjahr
   AND budat IN @s_budat
   AND blart = 'RV'.

  APPEND LINES OF it_bsad TO it_bsid.

  IF it_bsid[] IS NOT INITIAL.
    SELECT bukrs, vbeln, belnr, zuonr, saknr,zfbdt,buzei,gjahr,augbl,augdt,dmbtr,wrbtr,pswbt,hkont,matnr,menge,werks
    INTO CORRESPONDING FIELDS OF TABLE @it_bseg
      FROM bseg
      FOR ALL ENTRIES IN @it_bsid
      WHERE belnr = @it_bsid-belnr
      AND bukrs = @it_bsid-bukrs
      AND gjahr = @it_bsid-gjahr
      AND buzei EQ '001'.
    "AND hkont IN @s_saknr.

    SELECT bukrs, vbeln, belnr, zuonr, saknr,zfbdt,buzei,gjahr,augbl,augdt,dmbtr,wrbtr,pswbt,hkont,matnr,menge,werks
INTO CORRESPONDING FIELDS OF TABLE @it_bseg2
  FROM bseg
  FOR ALL ENTRIES IN @it_bsid
  WHERE belnr = @it_bsid-belnr
  AND bukrs = @it_bsid-bukrs
  AND gjahr = @it_bsid-gjahr
  AND buzei NE '001'
  AND hkont IN @s_saknr.
    IF it_bseg2[] IS INITIAL AND s_saknr NE  ''.
      REFRESH it_data[].
    ENDIF.

    SORT it_bseg ASCENDING BY vbeln.
*    append LINES OF it_bseg to it_bseg2.
    SORT it_bseg2 ASCENDING BY belnr.
  ENDIF.

  SELECT a~vbeln, a~fkart, a~waerk, a~vkorg, a~vtweg, a~knumv, a~fkdat, a~gjahr, a~rfbsk, a~zterm, a~ernam,
         a~erzet, a~erdat, a~kunrg, a~kunag, a~bstnk_vf, a~mwsbk, a~fksto, a~spart,a~sfakn,
         b~posnr, b~fkimg, b~vrkme, b~prsdt, b~fbuda, b~netwr, b~vgbel, b~vgpos, b~aubel, b~aupos,
         b~pstyv, b~prodh, b~wavwr, b~mwsbp, b~cmpre, b~arktx,b~matnr
*         c~vstel, c~lfart, c~xabln, c~lifex, c~bldat, c~wadat_ist, c~podat, c~kunnr,
*         d~bwart, d~werks, d~lgort, d~kdmat,
*         e~belnr, e~zuonr, e~saknr, e~zfbdt, e~buzei,
*         f~bstnk

  FROM vbrk AS a INNER JOIN vbrp AS b ON a~vbeln = b~vbeln
*       LEFT OUTER JOIN likp AS c  ON b~vgbel = c~vbeln
*       LEFT OUTER JOIN lips AS d ON b~vgbel = d~vbeln AND b~vgpos = d~posnr
*       LEFT OUTER JOIN bseg AS e ON a~vbeln = e~vbeln
*       LEFT OUTER JOIN vbak AS f ON b~aubel = f~vbeln

  INTO CORRESPONDING FIELDS OF TABLE @it_data
  FOR ALL ENTRIES IN @it_bseg
  WHERE  a~vkorg = @it_bseg-bukrs
  AND a~vbeln = @it_bseg-vbeln.



  IF it_data[] IS NOT INITIAL.

    SELECT vbeln, vstel, lfart, xabln, lifex, bldat, wadat_ist, podat, kunnr
      INTO CORRESPONDING FIELDS OF TABLE @it_likp
      FROM likp
      FOR ALL ENTRIES IN @it_data
      WHERE vbeln = @it_data-vgbel.
    SORT it_likp ASCENDING BY vbeln.

    SELECT vbeln,posnr, bwart, werks, lgort, kdmat, mtart
      INTO CORRESPONDING FIELDS OF TABLE @it_lips
      FROM lips
      FOR ALL ENTRIES IN @it_data
      WHERE vbeln = @it_data-vgbel AND posnr = @it_data-vgpos.
    SORT it_lips ASCENDING BY vbeln posnr.


    SELECT vbeln, bstnk
      INTO CORRESPONDING FIELDS OF TABLE @it_vbak
      FROM vbak
      FOR ALL ENTRIES IN @it_data
      WHERE vbeln = @it_data-aubel AND bstnk IN @s_bstnk.
    IF it_vbak[] IS INITIAL AND s_bstnk NE ''.
      REFRESH it_data[].
    ENDIF.
    SORT it_vbak ASCENDING BY vbeln.

    SELECT vbeln, fpnum
      INTO CORRESPONDING FIELDS OF TABLE @it_zfitx
      FROM zfitx_fpdetail
      FOR ALL ENTRIES IN @it_data
      WHERE  vbeln = @it_data-vbeln.

    SELECT vbeln, cgrn
    INTO CORRESPONDING FIELDS OF  TABLE @it_zsogdo
      FROM zsogdo
      FOR ALL ENTRIES IN @it_data
       WHERE vbeln = @it_data-vgbel.

    SELECT kunnr, name1
      INTO CORRESPONDING FIELDS OF TABLE @it_kna1
      FROM kna1
      FOR ALL ENTRIES IN @it_data
       WHERE kunnr = @it_data-kunag.


  ENDIF.
ENDFORM.

